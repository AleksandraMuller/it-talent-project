apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { .Chart.Name } }
  namespace: { { .Values.namespace } }
  labels:
    app: { { .Chart.Name } }
spec:
  replicas: { { .Values.replicas } }
  selector:
    matchLabels:
      app: azuretest
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: { { .Chart.Name } }
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: azure-test
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          ports:
            - name: azuretest
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 5
          resources:
            limits:
              cpu: { { .Values.resources.limits.cpu | quote } }
              memory: { { .Values.resources.limits.memory | quote } }
            requests:
              cpu: { { .Values.resources.requests.cpu | quote } }
              memory: { { .Values.resources.requests.memory | quote } }
